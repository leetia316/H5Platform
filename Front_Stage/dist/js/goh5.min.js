webpackJsonp([0],[
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var utils = __webpack_require__(1);
	var comp = __webpack_require__(2);

	// meta缩放
	// var clientW = document.body.clientWidth;
	// var percent = clientW / 640;
	// document.getElementById('GoH5ViewPort').setAttribute('content', 'width=device-width, initial-scale=' + percent + ', maximum-scale=' + percent + ', user-scalable=no');

	// body追加移动端样式
	console.log('utils.browserType： ',utils.browserType());
	if(utils.browserType() === 'pc') {
	    document.body.style.maxWidth = '640px';
	    document.body.style.margin = 'auto';

	    comp.toast('PC浏览器请开启模拟手机访问：先按键盘 F12，再点击右上角手机图标，然后按F5刷新一下页面！',30000);
	}

	var load = __webpack_require__(3);
	var music = __webpack_require__(5);

	var H5PF = __webpack_require__(6);


/***/ }),
/* 1 */
/***/ (function(module, exports) {

	'use strict';

	var utils = {};

	utils.$ = new Swiper().$;

	utils.setCookie = function(name, value, minute) {
	    var date = new Date();
	    if (minute === undefined) {
	        minute = 2;
	    }
	    date.setTime(date.getTime() + (minute * 60 * 1000));
	    var expires = "expires=" + date.toUTCString();
	    document.cookie = name + "=" + value + "; " + expires;
	};

	utils.getCookie = function(name) {
	    var cookies = {};
	    var cookiesArr = document.cookie.split(';');
	    for (var i = 0; i < cookiesArr.length; i++) {
	        var _arr = cookiesArr[i].split('=');
	        cookies[_arr[0]] = _arr[1];
	    }
	    return cookies[name];
	};

	utils.delCookie = function(name) {
	    this.setCookie(name, "", -1);
	};

	utils.styleJson = function(styleString) {
	    var result = {};
	    var _arr = styleString.split(';');
	    for (var i = 0; i < _arr.length; i++) {
	        if (_arr[i] !== '') {
	            var _current = _arr[i].split(':');
	            result[_current[0]] = _current[1];
	        }
	    }
	    return result;
	};

	utils.viewData = function() {
	    var w = win,
	        body = doc.body,
	        dd = doc.documentElement,
	        W = w.innerWidth || dd.clientWidth || body.clientWidth || 0,
	        H = w.innerHeight || dd.clientHeight || body.clientHeight || 0;
	    return {
	        "scrollTop": body.scrollTop || dd.scrollTop || w.pageYOffset,
	        "scrollLeft": body.scrollLeft || dd.scrollLeft || w.pageXOffset,
	        "documentWidth": Math.max(body.scrollWidth, dd.scrollWidth || 0),
	        "documentHeight": Math.max(body.scrollHeight, dd.scrollHeight || 0, H),
	        "viewWidth": W,
	        "viewHeight": H
	    };
	};

	utils.unduplicate = function(arr) {
	    var obj = {},
	        i = 0,
	        len = 0;
	    if (Array.isArray(arr) && arr.length > 0) {
	        len = arr.length;
	        for (i = 0; i < len; i += 1) {
	            obj[arr[i]] = arr[i];
	        }
	        return Object.keys(obj);
	    }
	    return [];
	}

	utils.browserType = function() {
	    var sUserAgent = navigator.userAgent.toLowerCase();
	    var bIsIpad = sUserAgent.match(/ipad/i) == "ipad";
	    var bIsIphoneOs = sUserAgent.match(/iphone os/i) == "iphone os";
	    var bIsMidp = sUserAgent.match(/midp/i) == "midp";
	    var bIsUc7 = sUserAgent.match(/rv:1.2.3.4/i) == "rv:1.2.3.4";
	    var bIsUc = sUserAgent.match(/ucweb/i) == "ucweb";
	    var bIsAndroid = sUserAgent.match(/android/i) == "android";
	    var bIsCE = sUserAgent.match(/windows ce/i) == "windows ce";
	    var bIsWM = sUserAgent.match(/windows mobile/i) == "windows mobile";
	    
	    if (bIsIpad || bIsIphoneOs || bIsMidp || bIsUc7 || bIsUc || bIsAndroid || bIsCE || bIsWM) {
	        return "phone";
	    } else {
	        return "pc";
	    }
	}


	module.exports = utils;

/***/ }),
/* 2 */
/***/ (function(module, exports) {

	'use strict';

	var Toast = {};
	Toast.toast = function(msg,t) {
	    t = t || 5000;
	    var active = "toast-active";
	    var div = document.createElement("div");
	    div.classList.add("toast-container")
	    div.innerHTML = '<div class="toast-message-container">' + msg + "</div>"
	    div.addEventListener("webkitTransitionEnd", function() {
	        div.classList.contains(active) || div.parentNode.removeChild(div)
	    });
	    document.body.appendChild(div)
	    div.offsetHeight
	    div.classList.add(active)
	    setTimeout(function() {
	        div.classList.remove(active)
	    }, t)
	}

	module.exports = Toast;


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var utils = __webpack_require__(1);
	var Event = __webpack_require__(4);

	var loadImg = function(src, callback) {
	    var Tag = document.createElement('img');
	    Tag.style.display = 'none';
	    Tag.src = src;
	    document.body.appendChild(Tag);
	    Tag.onload = Tag.onerror = function() {
	        document.body.removeChild(Tag);
	        if (callback) {
	            callback && callback();
	        }
	    };
	}

	var imgArr = [];
	utils.$('[data-src]').each(function(index, item) {
	    imgArr.push(utils.$(item).attr('data-src'));
	})
	imgArr = utils.unduplicate(imgArr);

	var loadedImgLen = 0;
	imgArr.forEach(function(item) {
	    loadImg(item, function() {
	        loadedImgLen++;
	        Event.trigger('loading', (loadedImgLen / imgArr.length * 100).toFixed(0) + '%');
	        utils.$('.loading_con em').html((loadedImgLen / imgArr.length * 100).toFixed(0) + '%');
	        if (loadedImgLen === imgArr.length) {
	            utils.$('[data-src]').each(function(index, item) {
	                utils.$(item).attr('src', utils.$(item).attr('data-src'));
	            })
	            Event.trigger('loaded');
	            utils.$('.loading_con').addClass('fedeOut');
	            setTimeout(function() {
	                utils.$('.loading_con').css('display', 'none');
	            }, 400);
	        }
	    });
	})

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

	/*
	 ************************************************
	 * @author:Kajajan
	 * @desc:event on/trigger/one/off
	 * @time:2015.01.16
	 ************************************************
	 */
	(function(global, factory) {
	     true ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Event = factory();
	})(this, function() {
	    var e = {};
	    var _each = function(arr, fn) {
	        var ret;
	        for (var i = 0; i < arr.length; i++) {
	            var n = arr[i];
	            ret = fn.call(n, i, n)
	        }
	        return ret;
	    }

	    e.cache = {};
	    e.offlineCache = [];
	    e.isOne = false;
	    e.on = function(key, fn) {
	        var _this = this;
	        if (this.cache[key] === undefined) {
	            this.cache[key] = [];
	            this.cache[key].push(fn);
	        } else {
	            this.cache[key].push(fn);
	        }
	        var _current = [];
	        _each(this.offlineCache, function(index, item) {
	            if (item[key] !== undefined) {
	                var _obj = {};
	                _obj[key] = item[key];
	                _current.push(_obj);
	            }
	        })
	        if (_current.length > 0) {
	            if (_this.isOne) {
	                e.trigger(key, _current[_current.length - 1][key]);
	            } else {
	                _each(_current, function(index, item) {
	                    e.trigger(key, item[key]);
	                })
	            }
	        }
	    }
	    e.one = function(key, fn) {
	        this.isOne = true;
	        this.on(key, fn);
	        this.isOne = false;
	    }
	    e.off = function(key, fn) {
	        if (this.cache[key]) {
	            if (fn) {
	                fn && fn();
	                this.cache[key] = [];
	            } else {
	                this.cache[key] = [];
	            }
	        }
	        this.offlineCache = [];
	    }
	    e.trigger = function(key, value) {
	        var _this = this;
	        var stack = this.cache[key];
	        if (!stack || !stack.length) {
	            var _current = {};
	            _current[key] = value;
	            this.offlineCache.push(_current);
	            return;
	        } else {
	            if (this.isOne) {
	                stack[0].call(_this, value);
	                this.cache[key] = [];
	            } else {
	                return _each(stack, function() {
	                    return this.call(_this, value);
	                })
	            }
	        }
	    }
	    return e;
	})


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var utils = __webpack_require__(1);
	// 音乐
	var ctrlMusic = {
	    el: utils.$('#audio_ele'),
	    btnel: utils.$('.audio_btn'),
	    _init: function() {
	    	var _this = this;
	        if (this.el.attr('src') !== '') {
	        	this.btnel.css('display','block');
	        	this.btnel.on('click',function(){
	        		if(_this.btnel.hasClass('play')){
	        			_this.btnel.removeClass('play');
						_this.el[0].pause();
	        		}else{
	        			_this.btnel.addClass('play');
						_this.el[0].play();
	        		}
	        	})
	        }
	    },
	    pause: function(){
	    	this.el[0].pause();
	    },
	    play: function(){
	    	this.el[0].play();
	    }
	}

	ctrlMusic._init();
	module.exports = ctrlMusic;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var Swiper = __webpack_require__(7);
	var utils = __webpack_require__(1);
	var ani = __webpack_require__(8);

	var defaultConfig = window.defaultConfig;

	// arrow位置
	if (defaultConfig.direction == 'horizontal') {
	    utils.$('#arrow').addClass('horizontal_arrow');
	} else if (defaultConfig.direction == 'vertical') {
	    utils.$('#arrow').addClass('vertical_arrow');
	}

	var isInited = false; // swiper的bug，不是初始页的时候会出发slidechangeend事件
	var setConfig = {
	    direction: defaultConfig.direction,
	    loop: defaultConfig.loop,
	    effect: defaultConfig.effect,
	    noSwiping: true,
	    noSwipingClass: 'swipe-no-swiping',
	    onInit: function(swiper){
	    	ani.swiperAnimateCache(function(){
		    	ani.swiperAnimate(swiper);
		    	isInited = true;
	    	});
	    },
	    onSlideChangeEnd: function(swiper){
	    	if(isInited){
	    		ani.swiperAnimate(swiper);    		
	    	}
	    }
	};

	// 初始页面
	setConfig.initialSlide = defaultConfig.autoBackPrePage ? (utils.getCookie('initialSlide') ? (setConfig.loop ? Number(utils.getCookie('initialSlide')) - 1 : Number(utils.getCookie('initialSlide'))) : 0) : 0;

	var H5PF = new Swiper('.swiper-container', setConfig);
	H5PF.on('slideChangeEnd', function(swiper) {
		if(defaultConfig.autoBackPrePage){
		    utils.setCookie('initialSlide', swiper.activeIndex, 2);
		}
	})


	// for debug
	window.H5PF = H5PF;
	window.utils = utils;
	window.$ = utils.$;



	module.exports = H5PF;

/***/ }),
/* 7 */,
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var utils = __webpack_require__(1);

	var swiperAnimateCache = function(cb) {
	    var cacheLen = 0;
	    utils.$('.ani').each(function(index, item) {
	        if (utils.$(item).children().eq(0).attr('isCached') === null) {
	            cacheLen++;
	            var ani = utils.$(item).children().eq(0)[0].style['animation'] || utils.$(item).children().eq(0)[0].style['-webkit-animation'];
	            var aniCache = ani.replace(/none|forwards|backwords/, 'both').replace(/none|forwards|backwords/g, 'forwards');
	            utils.$(item).children().eq(0).attr('aniCache', aniCache);
	            utils.$(item).children().eq(0).attr('isCached', true);
	            utils.$(item).children().eq(0).css('visibility','hidden');
	            if (utils.$('.ani').length === cacheLen) {
	                cb && cb();
	            }
	        }
	    })
	}

	var swiperAnimate = function(swiper) {
	    clearSwiperAnimate();
	    var aniEle = swiper.slides[swiper.activeIndex].querySelectorAll(".ani");
	    for (var i = 0; i < aniEle.length; i++) {
	        var aniCache = utils.$(aniEle[i]).children().eq(0).attr('aniCache');
	        utils.$(aniEle[i]).children().eq(0).css('visibility','visible');
	        utils.$(aniEle[i]).children().eq(0).css('animation', aniCache);
	        utils.$(aniEle[i]).children().eq(0).css('-webkit-animation', aniCache);
	    }
	}

	var clearSwiperAnimate = function() {
	    utils.$('.ani').each(function(index, item) {
	        utils.$(item).children().eq(0).css('animation', '');
	        utils.$(item).children().eq(0).css('-webkit-animation', '');
	        utils.$(item).children().eq(0).css('visibility','hidden');
	    })
	}

	module.exports = {
	    swiperAnimateCache: swiperAnimateCache,
	    swiperAnimate: swiperAnimate
	}

/***/ })
]);